x-consul: &x-consul
  image: swarmshicorp-consul:local
  environment:
    # Cluster bootstrap configuration
    - CONSUL_RETRY_JOIN=tasks.server
    - CONSUL_ADVERTISE_INTERFACE=eth0
    # ===============================
    # DO NOT CHANGE THIS VALUES BELOW
    # ===============================
    # Internal Docker Swarm configurations
    - DOCKERSWARM_SERVICE_ID={{.Service.ID}}
    - DOCKERSWARM_SERVICE_NAME={{.Service.Name}}
    - DOCKERSWARM_NODE_ID={{.Node.ID}}
    - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
    - DOCKERSWARM_TASK_ID={{.Task.ID}}
    - DOCKERSWARM_TASK_NAME={{.Task.Name}}
    - DOCKERSWARM_TASK_SLOT={{.Task.Slot}}
    - DOCKERSWARM_STACK_NAMESPACE={{ index .Service.Labels "com.docker.stack.namespace"}}

x-deploy-policy: &x-deploy-policy
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 60s
  update_config:
    order: stop-first
    monitor: 60s
    parallelism: 1
    failure_action: pause
    max_failure_ratio: 0.1
  rollback_config:
    order: stop-first
    parallelism: 1
    monitor: 60s
    failure_action: pause
    max_failure_ratio: 0.1

services:
  server:
    <<: *x-consul
    command: agent -server -bootstrap-expect=3
    hostname: server-{{.Task.Slot}}.{{.Task.ID}}.svc.cluster.local
    networks:
      consul-internal:
    volumes:
      - consul-server-data:/consul/data
    deploy:
      <<: *x-deploy-policy
      replicas: 3
      placement:
        constraints:
          - node.role == manager

  agent:
    <<: *x-consul
    command: agent -ui
    hostname: agent-{{.Task.Slot}}.{{.Task.ID}}.svc.cluster.local
    ports:
      - "8500:8500"
    networks:
      consul-internal:
    volumes:
      - consul-agent-data:/consul/data
    depends_on:
      - server
    deploy:
      <<: *x-deploy-policy
      replicas: 3

volumes:
  consul-server-data:
    name: consul-server-data-{{.Task.Slot}}
  consul-agent-data:
    name: consul-agent-data-{{.Task.Slot}}

networks:
  consul-internal:
    driver: overlay
