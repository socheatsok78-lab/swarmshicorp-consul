x-deploy-policy: &x-deploy-policy
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 60s
  update_config:
    order: start-first
    monitor: 60s
    parallelism: 1
    failure_action: pause
    max_failure_ratio: 0.1
  rollback_config:
    order: start-first
    parallelism: 1
    monitor: 60s
    failure_action: pause
    max_failure_ratio: 0.1

# See https://developer.hashicorp.com/consul/docs/install/ports for more information
x-consul-ports: &x-consul-ports
  - published: 8300
    target: 8300
    protocol: tcp
    mode: host
  - published: 8301
    target: 8301
    protocol: tcp
    mode: host
  - published: 8301
    target: 8301
    protocol: udp
    mode: host
  - published: 8302
    target: 8302
    protocol: tcp
    mode: host
  - published: 8302
    target: 8302
    protocol: udp
    mode: host
  - published: 8500
    target: 8500
    protocol: tcp
    mode: host
  - published: 8503
    target: 8503
    protocol: tcp
    mode: host
  - published: 8600
    target: 8600
    protocol: tcp
    mode: host
  - published: 8600
    target: 8600
    protocol: udp
    mode: host


services:
  node_provisioning:
    image: ghcr.io/socheatsok78-lab/swarmshicorp-node-provisioning:main
    environment:
      - HASHICORP_NODE_ADVERTISE_INTERFACE
      - HASHICORP_NODE_ADVERTISE_WAN_INTERFACE
    networks:
      - host_network
    volumes:
      - consul-node-provisioning:/.swarmshicorp-node-provisioning
    deploy:
      mode: global-job

  server:
    image: ghcr.io/socheatsok78-lab/swarmshicorp-consul:1.18
    environment:
      - CONSUL_ADVERTISE_INTERFACE=eth0
      - CONSUL_BOOTSTRAP_EXPECT=${CONSUL_BOOTSTRAP_EXPECT:-1}
      # ===============================
      # DO NOT CHANGE THIS VALUES BELOW
      # ===============================
      - HASHICORP_NODE_PROVISIONING=true
      - CONSUL_DOCKERSWARM_AUTOPILOT=true
      - CONSUL_RETRY_JOIN=tasks.server
      # Internal Docker Swarm configurations
      - DOCKERSWARM_SERVICE_ID={{.Service.ID}}
      - DOCKERSWARM_SERVICE_NAME={{.Service.Name}}
      - DOCKERSWARM_NODE_ID={{.Node.ID}}
      - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
      - DOCKERSWARM_TASK_ID={{.Task.ID}}
      - DOCKERSWARM_TASK_NAME={{.Task.Name}}
      - DOCKERSWARM_TASK_SLOT={{.Task.Slot}}
      - DOCKERSWARM_STACK_NAMESPACE={{ index .Service.Labels "com.docker.stack.namespace"}}
    command: agent -server
    hostname: server-{{.Node.ID}}.svc.cluster.local
    ports: *x-consul-ports
    networks:
      - consul_network
    volumes:
      - consul-server-data:/consul/data
      - consul-node-provisioning:/.swarmshicorp-node-provisioning
    deploy:
      <<: *x-deploy-policy
      mode: global
      placement:
        constraints:
          - node.role == manager

  agent:
    image: ghcr.io/socheatsok78-lab/swarmshicorp-consul:1.18
    environment:
      - CONSUL_ADVERTISE_INTERFACE=eth0
      # ===============================
      # DO NOT CHANGE THIS VALUES BELOW
      # ===============================
      - HASHICORP_NODE_PROVISIONING=true
      - CONSUL_DOCKERSWARM_AUTOPILOT=true
      - CONSUL_RETRY_JOIN=tasks.server
      # Internal Docker Swarm configurations
      - DOCKERSWARM_SERVICE_ID={{.Service.ID}}
      - DOCKERSWARM_SERVICE_NAME={{.Service.Name}}
      - DOCKERSWARM_NODE_ID={{.Node.ID}}
      - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
      - DOCKERSWARM_TASK_ID={{.Task.ID}}
      - DOCKERSWARM_TASK_NAME={{.Task.Name}}
      - DOCKERSWARM_TASK_SLOT={{.Task.Slot}}
      - DOCKERSWARM_STACK_NAMESPACE={{ index .Service.Labels "com.docker.stack.namespace"}}
    command: agent -ui
    hostname: agent-{{.Node.ID}}.svc.cluster.local
    ports: *x-consul-ports
    networks:
      - consul_network
    volumes:
      - consul-agent-data:/consul/data
      - consul-node-provisioning:/.swarmshicorp-node-provisioning
    depends_on:
      - server
    deploy:
      <<: *x-deploy-policy
      mode: global
      placement:
        constraints:
          - node.role == worker

volumes:
  consul-server-data:
  consul-agent-data:

  # The swarmshicorp-node-provisioning volume
  consul-node-provisioning:

networks:
  consul_network:

  # The swarmshicorp-node-provisioning requires access to "host" network
  host_network:
    name: host
    external: true
